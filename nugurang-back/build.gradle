plugins {
    id 'checkstyle'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "io.freefair.lombok" version "6.1.0"
    id 'java'
    id 'java-library'
    id 'org.springframework.boot' version '2.5.0'
    id 'org.liquibase.gradle' version '2.0.4'
    id 'pmd'
    id 'com.github.spotbugs' version '4.0.0'
}

def checkstyleVersion = '9.2.1'
def pmdVersion = '6.+'

group = 'com.nugurang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    checkstyleConfig
}

repositories {
    mavenCentral()
}

diff.dependsOn compileJava
diffChangeLog.dependsOn compileJava
generateChangelog.dependsOn compileJava

dependencies {
    api(
        'com.querydsl:querydsl-jpa'
    )

    annotationProcessor(
        'com.querydsl:querydsl-apt::jpa',
        'javax.persistence:javax.persistence-api',
        'javax.annotation:javax.annotation-api',
        'org.mapstruct:mapstruct-processor:1.4.2.Final',
        'org.projectlombok:lombok',
        'org.projectlombok:lombok-mapstruct-binding:0.2.0',
        'org.springframework.boot:spring-boot-configuration-processor'
    )

    checkstyleConfig("com.puppycrawl.tools:checkstyle:${checkstyleVersion}") {
        transitive = false
    }

    compileOnly(
        'org.projectlombok:lombok'
    )

    developmentOnly(
        'org.springframework.boot:spring-boot-devtools'
    )

    implementation(
        'com.google.guava:guava:31.0.1-jre',
        'com.graphql-java-kickstart:graphql-spring-boot-starter:12.+',
        'com.graphql-java-kickstart:voyager-spring-boot-starter:11.1.0',
        'com.graphql-java:graphql-java-extended-scalars:17.0',
        'com.graphql-java:graphql-java-spring-boot-starter-webmvc:2.0',
        'com.vladmihalcea:hibernate-types-52:2.14.0',
        'javax.cache:cache-api',
        'org.ehcache:ehcache',
        'org.mapstruct:mapstruct:1.4.2.Final',
        'org.springframework.boot:spring-boot-starter-actuator',
        'org.springframework.boot:spring-boot-starter-batch',
        'org.springframework.boot:spring-boot-starter-cache',
        'org.springframework.boot:spring-boot-starter-data-jpa',
        'org.springframework.boot:spring-boot-starter-oauth2-client',
        'org.springframework.boot:spring-boot-starter-security',
        'org.springframework.boot:spring-boot-starter-validation',
        'org.springframework.boot:spring-boot-starter-web',
        'org.springframework.security:spring-security-acl',
        'net.time4j:time4j-base:5.8',
        'net.time4j:time4j-sqlxml:5.8',
        'net.time4j:time4j-tzdata:5.0-2020a',
        'net.sf.ehcache:ehcache-core:2.6.11'
    )

    liquibaseRuntime(
        'org.liquibase:liquibase-core',
        'org.liquibase.ext:liquibase-hibernate5:4.6.2'
    )

    runtimeOnly(
        'com.graphql-java-kickstart:graphiql-spring-boot-starter:11.1.0',
        'com.h2database:h2',
        'mysql:mysql-connector-java'
    )

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation(
        'com.graphql-java-kickstart:graphql-spring-boot-starter-test:12.+',
        'org.springframework.batch:spring-batch-test',
        'org.springframework.security:spring-security-test'
    )

    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:deprecation' << '-Xlint:unchecked'
}

checkstyle {
    toolVersion = checkstyleVersion
    showViolations = true
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}

/*
checkstyleMain {
    logging.setLevel(LogLevel.LIFECYCLE)
}
*/

checkstyleTest {
    enabled = false
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

pmd {
    toolVersion = pmdVersion
    consoleOutput = true
    ignoreFailures = true
    reportsDir = file("${buildDir}/reports/pmd")
}
 
tasks.withType(Pmd) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

spotbugs {
    ignoreFailures = false
    showProgress = true
    effort = 'default'
    reportLevel = 'default'
    visitors = [ 'FindSqlInjection', 'SwitchFallthrough' ]
    omitVisitors = [ 'FindNonShortCircuit' ]
    reportsDir = file("$buildDir/spotbugs") as Directory
    onlyAnalyze = [ 'com.nugurang.*' ]
    maxHeapSize = '1g'
    extraArgs = [ '-nested:false' ]
    jvmArgs = [ '-Duser.language=en' ]
}
